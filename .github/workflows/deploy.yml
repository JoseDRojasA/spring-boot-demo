name: Deploy
on:
  push:
    tags:
      - '*'
    branches: 
      # - main
      - dev
jobs:
  Deploy:
    runs-on: ubuntu-20.04

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - name: Run build
        run: |
          chmod +x mvnw
          ./mvnw install      

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: josedrojasa/spring-boot-demo:${{ github.sha }}
  
      # Deploy in AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition demo-spring-boot --query taskDefinition > task-definition.json
  
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: api-demo
          image: josedrojasa/spring-boot-demo:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: demo-spring-boot
          cluster: demo
          wait-for-service-stability: true